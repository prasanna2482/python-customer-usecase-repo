{
  "_id": "67f64609e56e5891bbef9e9c",
  "name": "Jenkins_Param_Trial_DND_Pras",
  "description": "Create a new template from scratch.",
  "owner": "5f75953446564c10379902bb",
  "roles": [
    {
      "role": "administrator",
      "user": "qaprod@protonmail.com",
      "group": null
    }
  ],
  "tags": [],
  "type": [
    "sdlc"
  ],
  "organizationName": "protonmail.com",
  "account": "org109-acc",
  "project": {
    "name": "",
    "project_id": ""
  },
  "workflow": {
    "source": {
      "name": "",
      "service": "github",
      "accountId": "6705127d20f7260012756922",
      "workspace": "",
      "workspaceName": "",
      "repository": "python-customer-usecase-repo",
      "repoId": "prasanna2482/python-customer-usecase-repo",
      "projectId": "prasanna2482/python-customer-usecase-repo",
      "gitUrl": "https://github.com/prasanna2482/python-customer-usecase-repo",
      "sshUrl": "git@github.com:prasanna2482/python-customer-usecase-repo.git",
      "branch": "main",
      "secondary_branches": [
        "py1"
      ],
      "key": "",
      "trigger_active": true,
      "isPushEvent": true,
      "isPrEvent": false,
      "isMonitored": false,
      "sendStepUpdates": false,
      "prCreatedEvent": true,
      "prApprovedEvent": false,
      "gitExportEnabled": true,
      "gitExportPath": "pipelineconfig",
      "dynamicSettings": true,
      "allowDynamicSettingsInUi": false,
      "allowPipelineParametersInUi": true,
      "allowDynamicSettingsInSalesforceUi": false,
      "enableBranchSwitch": false,
      "opseraEdgeToolId": "",
      "useOpseraEdgeProxy": false,
      "baselineFromSuccessfulRun": false,
      "branch_pattern": "release*"
    },
    "plan": [
      {
        "name": "export",
        "notes": "",
        "description": "",
        "tool": {
          "tool_identifier": "command-line",
          "configuration": {
            "type": "",
            "jobType": "SHELL SCRIPT",
            "toolConfigId": "642fa4756736ad0088b81da8",
            "toolName": "qa_Jenkins test_DO NOT DELETE",
            "jobName": "SHELL_SCRIPT_V2_67f64609e56e5891bbef9e9c_67f64b0c1610607e4be306b9",
            "toolJobId": "648ff5637055e50060c8b48a",
            "projectId": "",
            "buildType": "others",
            "gitToolId": "",
            "repoId": "",
            "gitUrl": "",
            "sshUrl": "",
            "service": "",
            "gitCredential": "",
            "workspace": "",
            "workspaceName": "",
            "repository": "",
            "gitBranch": "",
            "agentLabels": "generic-linux",
            "autoScaleEnable": true,
            "outputPath": "",
            "outputFileName": "",
            "dependencyType": "",
            "workspaceDeleteFlag": false,
            "sourceScript": false,
            "inputPath": "",
            "inputFileName": "",
            "commands": "export opsera_runcount=${opsera_pipeline_run_count}\nexport opsera_pipelineid=${opsera_pipeline_id}",
            "terraformStepId": "",
            "customParameters": [],
            "outputCustomParameters": [
              {
                "parameterId": "687cdd321e7b777a141fc4f6",
                "parameterName": "opsera-runcount"
              },
              {
                "parameterId": "687ce451b9d54a9f02b4f8a9",
                "parameterName": "opsera-pipelineid"
              }
            ],
            "stepParameters": [],
            "useTerraformOutput": false,
            "sonarScanFlag": false,
            "saveSonarParameters": false,
            "sonarCustomParameters": [],
            "sonarToolConfigId": "",
            "projectKey": "",
            "saveEnvironmentVariables": false,
            "environmentVariables": [],
            "clientSideThreshold": false,
            "thresholdCompliance": [],
            "thresholdRating": [],
            "reportDetailsFlag": false,
            "reportPath": "",
            "reportFileName": "",
            "scriptType": "inline",
            "scriptId": "",
            "toolJobName": "Shell Script"
          },
          "threshold": {
            "type": "",
            "value": ""
          },
          "job": null,
          "job_type": "shell script"
        },
        "trigger": [],
        "type": [
          "script"
        ],
        "orchestration_type": "standard",
        "notification": [],
        "tags": [
          {
            "type": "pipeline",
            "value": "export_67f64b0c1610607e4be306b9"
          }
        ],
        "last_status": {
          "data": {
            "jenkinsConsoleLog": "",
            "runCount": 134,
            "action": "START",
            "hasDowloadableReport": false,
            "gitUrl": "",
            "gitBranch": "",
            "repository": "",
            "status": "SUCCESS",
            "message": "Job is Successful",
            "buildNumber": 81,
            "jobName": "SHELL_SCRIPT_V2_67f64609e56e5891bbef9e9c_67f64b0c1610607e4be306b9"
          },
          "updatedAt": "2025-09-05T14:54:01.811Z"
        },
        "active": true,
        "dependencies": [],
        "updatedAt": "2025-04-09T10:25:16.656Z",
        "_id": "67f64b0c1610607e4be306b9"
      },
      {
        "name": "Approval",
        "notes": "",
        "description": "",
        "tool": {
          "tool_identifier": "approval",
          "configuration": {
            "sendCustomMessage": true,
            "message": "test",
            "contact": "test"
          },
          "threshold": {
            "type": "user-approval",
            "value": {
              "user": "5f75953446564c10379902bb",
              "email": "qaprod@protonmail.com",
              "approved": true,
              "approved_on": "2025-08-19T16:17:21.572Z",
              "message": "Approved by QA User-Production (qaprod@protonmail.com) with comment - approved"
            }
          },
          "job": null
        },
        "trigger": [],
        "type": [
          "interaction-gate"
        ],
        "orchestration_type": "standard",
        "notification": [
          {
            "type": "email",
            "addresses": [],
            "event": "error",
            "enabled": false,
            "logEnabled": false,
            "notifyTriggeredUser": false
          },
          {
            "type": "slack",
            "channel": "",
            "toolId": "",
            "event": "finished",
            "enabled": false,
            "logEnabled": false
          },
          {
            "type": "jira",
            "jiraBoard": "",
            "event": "all",
            "jiraToolId": "",
            "jiraProject": "",
            "jiraPriority": "",
            "jiraSprint": "",
            "jiraParentTicket": "",
            "jiraPrimaryAssignee": "",
            "jiraSecondaryAssignees": [],
            "enabled": false
          },
          {
            "type": "teams",
            "event": "all",
            "toolId": "67763163b1bfa9002a07cd1f",
            "enabled": true,
            "logEnabled": true,
            "teamsType": "teams",
            "teamsId": "de0ea457-ac3b-49b6-aba5-1ef9660b38cf",
            "teamsName": "Opsera",
            "channelId": "19:SE80YquImsRvIACazwOeK7vbdI5vDEscvFOi8waoSlA1@thread.tacv2",
            "channelName": "General"
          },
          {
            "type": "servicenow",
            "event": "all",
            "toolId": "",
            "serviceNowUserId": "",
            "serviceNowGroupId": "",
            "enabled": false
          },
          {
            "type": "gchat",
            "event": "all",
            "toolId": "",
            "enabled": false,
            "logEnabled": false
          },
          {
            "type": "azure",
            "event": "all",
            "enabled": false,
            "logEnabled": false,
            "azureBoardId": "",
            "azureBoardName": "",
            "azureToolId": "",
            "azureTeamId": "",
            "azureTeamName": "",
            "azureProjectName": "",
            "azureProjectId": "",
            "azurePriority": "",
            "azureSprint": "",
            "azureSprintId": "",
            "azureWorkType": "",
            "azureParentTicket": "",
            "azurePrimaryAssignee": ""
          },
          {
            "type": "github",
            "event": "all",
            "enabled": false,
            "logEnabled": false,
            "toolId": "",
            "githubLabels": [],
            "assignees": [],
            "githubRepositoryId": "",
            "githubIssueType": "",
            "githubParentIssueId": ""
          }
        ],
        "tags": [
          {
            "type": "pipeline",
            "value": "approval_67f961ef6f0fca03085a4c6b"
          }
        ],
        "active": true,
        "dependencies": [
          "67f64b0c1610607e4be306b9"
        ],
        "updatedAt": "2025-04-11T18:39:43.900Z",
        "_id": "67f961ef6f0fca03085a4c6b"
      },
      {
        "name": "Jenkins-with-Param",
        "notes": "",
        "description": "",
        "tool": {
          "tool_identifier": "run_job",
          "configuration": {
            "scripts": [
              {
                "active": true,
                "type": "manual_entry",
                "scriptRepository": "",
                "scriptName": "Testjenkinsparams",
                "scriptPath": "",
                "scriptLibraryId": "",
                "script": "set +xe\nCRUMB=$(curl -s --user \"$userid:$token\" \"$path/crumbIssuer/api/json\" | jq -r '.crumbRequestField + \":\" + .crumb')\n\nif [[ -z \"$CRUMB\" ]]; then\n  echo \"Error: Failed to retrieve CSRF Crumb. Exiting.\"\n  exit 1\nfi\n\nresponse=$(curl -i -s -X POST \"$path/job/${opsera-pipeid}_${opsera-stepid}/buildWithParameters\" \\\n--user \"$userid:$token\" \\\n-H \"$CRUMB\" \\\n--data-urlencode \"DOCKER_IMAGE_NAME=${opsera-dockerimgname}\" \\\n--data-urlencode \"DOCKER_FILE_PATH=.\" \\\n--data-urlencode \"DOCKER_TAG=check\" \\\n--data-urlencode \"CHECKBOX=TRUE\" \\\n2>&1)\nQUEUE_URL=$(echo \"$response\" | grep -i '^Location:' | awk '{print $2}' | tr -d '\\r')\nQUEUE_URL=${QUEUE_URL/http:/https:}\nBUILD_NUMBER=\"\"\necho \"Waiting for build to start...\"\nwhile [ -z \"$BUILD_NUMBER\" ]; do\nBUILD_NUMBER=$(curl -s \"${QUEUE_URL}/api/json\" --user \"$userid:$token\" | jq -r '.executable.number // empty')\nsleep 2\ndone\n# === Monitor the Opsera Pipeline ===\necho \"Jenkins job started with build number: $BUILD_NUMBER\"\nwhile true; do\n# Check Opsera pipeline status\npipeline_status=$(curl -s --request POST \\\n--url \"https://app.opsera.io/api/v1/pipeline/summary\" \\\n--header \"Content-Type: application/json\" \\\n--header \"Authorization: Bearer ${opsera-token}\" \\\n--data \"{\n\\\"pipelineId\\\":\\\"${opsera-pipelineid}\\\",\n\\\"runCount\\\":\\\"${opsera-runcount}\\\"\n}\" | jq -r '.workflow.last_run.status')\n# Verify the API response\nif [ -z \"$pipeline_status\" ]; then\necho \"Error: Failed to get pipeline status from Opsera\"\ncontinue\nfi\n\n#echo \"$(date '+%Y-%m-%d %H:%M:%S') - Opsera pipeline status: $pipeline_status\"\n  \n# Check Jenkins build status - FIXED: Using BUILD_NUMBER consistently\nJOB_URL=\"$path/job/${opsera-pipeid}_${opsera-stepid}/$BUILD_NUMBER/api/json\"\njenkins_response=$(curl -s --user \"$userid:$token\" \"$JOB_URL\")\njenkins_result=$(echo \"$jenkins_response\" | jq -r '.result')\nbuilding=$(echo \"$jenkins_response\" | jq -r '.building')\n  \n#echo \"$(date '+%Y-%m-%d %H:%M:%S') - Jenkins build status: ${jenkins_result:-unknown}, Building: ${building:-false}\"\n\n# Terminal condition checks\nif [[ \"$pipeline_status\" == \"stopped\" ]]; then\necho \"Detected 'stopped' status from Opsera. Stopping Jenkins build...\"\ncurl -s -X POST \"$path/job/${opsera-pipeid}_${opsera-stepid}/$BUILD_NUMBER/stop\" --user \"$userid:$token\"\nexit 1\nfi\nif [[ \"$building\" == \"false\" ]]; then\nif [[ \"$jenkins_result\" == \"SUCCESS\" ]]; then\necho \"Jenkins build completed successfully\"\nexit 0\nelif [[ \"$jenkins_result\" == \"FAILURE\" ]]; then\necho \"Jenkins build failed\"\nexit 1\nfi\nfi \n  # Wait before next check\nsleep 10\ndone",
                "scriptUrl": "",
                "tags": [],
                "scriptToolType": ""
              }
            ],
            "environmentVariables": [],
            "secretEnvironmentVariables": [],
            "plugins": [
              {
                "name": "Jenkins",
                "plugin": "registry_tool",
                "configuration": {
                  "toolIdentifier": "jenkins",
                  "toolId": "642fa4756736ad0088b81da8",
                  "connectionVariables": [
                    {
                      "label": "Jenkins Container URL",
                      "id": "jenkinsUrl",
                      "mappingFieldName": "path"
                    },
                    {
                      "label": "Jenkins Port",
                      "id": "jenkinsPort",
                      "mappingFieldName": ""
                    },
                    {
                      "label": "Jenkins User ID",
                      "id": "jUserId",
                      "mappingFieldName": "userid"
                    },
                    {
                      "label": "Jenkins Token",
                      "id": "jAuthToken",
                      "mappingFieldName": "token"
                    },
                    {
                      "label": "Proxy Enabled?",
                      "id": "proxyEnable",
                      "mappingFieldName": ""
                    },
                    {
                      "label": "Proxy Username",
                      "id": "proxyUserName",
                      "mappingFieldName": ""
                    },
                    {
                      "label": "Proxy Password",
                      "id": "proxyPassword",
                      "mappingFieldName": ""
                    },
                    {
                      "label": "Jenkins Password",
                      "id": "jPassword",
                      "mappingFieldName": ""
                    },
                    {
                      "label": "Auto-Scaling Enabled?",
                      "id": "autoScaleEnable",
                      "mappingFieldName": ""
                    },
                    {
                      "label": "Operating System",
                      "id": "osType",
                      "mappingFieldName": ""
                    },
                    {
                      "id": "vaultTypeProvider",
                      "mappingFieldName": ""
                    },
                    {
                      "label": "Path To Jenkins Token",
                      "id": "pathToSecret",
                      "mappingFieldName": ""
                    }
                  ]
                }
              }
            ]
          },
          "job": null
        },
        "trigger": [],
        "type": [
          "script"
        ],
        "orchestration_type": "standard",
        "notification": [],
        "tags": [
          {
            "type": "pipeline",
            "value": "jenkins-with-param_5ec7c8cedc73d971e2860b68"
          }
        ],
        "active": false,
        "dependencies": [
          "67f961ef6f0fca03085a4c6b"
        ],
        "updatedAt": "2020-05-22T12:42:54.717Z",
        "_id": "5ec7c8cedc73d971e2860b68"
      }
    ],
    "schedule": {
      "start_date": null,
      "end_date": null,
      "frequency": ""
    },
    "last_step": {
      "status": "stopped",
      "check_count": 1,
      "step_id": ""
    },
    "run_count": 134,
    "last_run": {
      "status": "stopped",
      "completed": "2025-09-05T14:54:02.707Z",
      "run_count": 134
    }
  },
  "active": true,
  "template": "5ec7c8cedc73d9532e860b67",
  "templateIdentifier": "blank_pipeline_template",
  "createdAt": "2025-04-09T10:03:53.597Z",
  "updatedAt": "2025-09-05T15:06:35.541Z",
  "__v": 0,
  "owner_name": "QA User-Production"
}